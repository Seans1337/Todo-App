{"ast":null,"code":"import _objectSpread from \"/Users/sean/Desktop/CS/react/react-todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toArray from \"/Users/sean/Desktop/CS/react/react-todo-app/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _taggedTemplateLiteral from \"/Users/sean/Desktop/CS/react/react-todo-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/sean/Desktop/CS/react/react-todo-app/src/components/TodoApp.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    height: 50px;\\n    padding: 15px;\\n    border-radius: 10px;\\n    border-color: #7fe0fd;\\n    font-size: 1.5em;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Table, Checkbox, Button } from 'semantic-ui-react';\nimport TodoItem from './TodoItem';\nimport styled from 'styled-components';\nconst NewTodo = styled.input(_templateObject());\nconst headers = {\n  'Content-Type': 'application/json'\n};\n\nclass TodoApp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [],\n      newTodo: ''\n    };\n\n    this.fetchTodos = () => {\n      fetch('http://localhost:4500/todos').then(data => data.json()).then(todos => this.setState({\n        todos\n      })).catch(err => console.log({\n        err\n      }));\n    };\n\n    this.handleToggleAll = () => {\n      const _this$state$todos = _toArray(this.state.todos),\n            todos = _this$state$todos.slice(0);\n\n      const allToggled = todos.every(todo => todo.completed);\n      const toggledTodos = todos.map(todo => _objectSpread({}, todo, {\n        completed: !allToggled\n      }));\n      this.setState({\n        todos: toggledTodos\n      });\n    };\n\n    this.handleClearCompleted = () => {\n      const todos = this.state.todos;\n      const incompleteTodos = todos.filter(todo => !todo.completed);\n      this.setState({\n        todos: incompleteTodos\n      });\n    };\n\n    this.handleInputChange = event => {\n      const value = event.target.value;\n      this.setState({\n        newTodo: value\n      });\n    };\n\n    this.handleNewTodoKeyDown = event => {\n      if (this.state.todos.length >= 10) {\n        return; //Only allows for 10 inputs\n      }\n\n      if (event.keyCode !== 13) {\n        return; //Only add when eneter key is hit\n      }\n\n      event.preventDefault();\n      const _this$state = this.state,\n            newTodo = _this$state.newTodo,\n            todos = _this$state.todos;\n      var value = newTodo.trim();\n\n      if (value) {\n        fetch('http://localhost:4500/todos', {\n          method: 'POST',\n          headers,\n          body: JSON.stringify({\n            title: value,\n            completed: false\n          })\n        }).then(this.fetchTodos).then(() => this.setState(''));\n      }\n    };\n\n    this.handleDelete = i => {\n      const todos = this.state.todos;\n      const todosLeft = todos.filter((t, index) => index !== i);\n      this.setState({\n        todos: todosLeft\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchTodos();\n  }\n\n  handleTodoClick(todo, index) {\n    const completed = todo.completed;\n\n    const _this$state$todos2 = _toArray(this.state.todos),\n          todos = _this$state$todos2.slice(0);\n\n    todos[index] = _objectSpread({}, todo, {\n      completed: !completed\n    });\n    this.setState({\n      todos\n    });\n  }\n\n  render() {\n    const todos = this.state.todos;\n    const allToggled = todos.every(todo => todo.completed);\n    return React.createElement(\"div\", {\n      className: \"todo-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(NewTodo, {\n      id: \"new-todo\",\n      placeholder: \"Start a new task?\",\n      autoFocus: true,\n      onChange: this.handleInputChange,\n      onKeyDown: this.handleNewTodoKeyDown,\n      value: this.state.newTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"new-todo\",\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"New Todo\"), todos.length === 0 ? React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Nothing todo!\")))) : React.createElement(Table, {\n      color: \"teal\",\n      unstackable: true,\n      celled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: allToggled,\n      onChange: this.handleToggleAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Toggle All\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.state.todos.map((todo, i) => React.createElement(TodoItem, {\n      key: i,\n      todo: todo,\n      handleToggle: () => this.handleTodoClick(todo, i),\n      handleDelete: () => this.handleDelete(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), React.createElement(Table.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      onClick: this.handleClearCompleted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Clear completed\"))))));\n  }\n\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/Users/sean/Desktop/CS/react/react-todo-app/src/components/TodoApp.js"],"names":["React","Component","Table","Checkbox","Button","TodoItem","styled","NewTodo","input","headers","TodoApp","state","todos","newTodo","fetchTodos","fetch","then","data","json","setState","catch","err","console","log","handleToggleAll","allToggled","every","todo","completed","toggledTodos","map","handleClearCompleted","incompleteTodos","filter","handleInputChange","event","value","target","handleNewTodoKeyDown","length","keyCode","preventDefault","trim","method","body","JSON","stringify","title","handleDelete","i","todosLeft","t","index","componentDidMount","handleTodoClick","render","display"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Table, Checkbox, Button} from 'semantic-ui-react'\nimport TodoItem from './TodoItem'\nimport styled from 'styled-components'\n\nconst NewTodo = styled.input`\n    width: 100%;\n    height: 50px;\n    padding: 15px;\n    border-radius: 10px;\n    border-color: #7fe0fd;\n    font-size: 1.5em;\n`;\n\nconst headers = {\n  'Content-Type': 'application/json'\n}\n\nclass TodoApp extends Component {\n  state = {\n    todos : [  ],\n    newTodo: ''\n  }\n\n  componentDidMount() {\n      this.fetchTodos()\n    }\n\n  fetchTodos = () => {\n    fetch('http://localhost:4500/todos')\n      .then(data => data.json())\n      .then(todos => this.setState({todos}))\n      .catch(err => console.log({err}))\n  }\n\n  handleTodoClick(todo, index) {\n    const {completed} = todo\n    const [...todos] = this.state.todos\n    todos[index] = {...todo, completed: !completed,}\n    this.setState({todos})\n  }\n\n  handleToggleAll = () => {\n    const [...todos] =this.state.todos\n    const allToggled = todos.every(todo => todo.completed)\n    const toggledTodos = todos.map(todo => ({\n      ...todo,\n      completed: !allToggled,\n    }))\n    this.setState({todos: toggledTodos})\n  }\n\n  handleClearCompleted = () => {\n    const {todos} = this.state\n    const incompleteTodos = todos.filter(todo => !todo.completed)\n    this.setState({todos: incompleteTodos})\n  }\n\n\n  handleInputChange = event => {\n    const value=event.target.value\n    this.setState({newTodo: value})\n  }\n\n  handleNewTodoKeyDown = event => {\n    if (this.state.todos.length >= 10) {\n      return //Only allows for 10 inputs\n    }\n\n    if (event.keyCode!==13) {\n      return //Only add when eneter key is hit\n    }\n\n    event.preventDefault()\n\n    const {newTodo, todos} = this.state\n    var value = newTodo.trim()\n    if (value) {\n      fetch('http://localhost:4500/todos',{\n        method: 'POST',\n        headers,\n        body: JSON.stringify({\n          title: value,\n          completed: false\n          })\n        })\n          .then(this.fetchTodos)\n          .then(() => this.setState(''))\n      }\n    }\n\n  handleDelete = (i) =>{\n    const {todos} = this.state\n    const todosLeft = todos.filter(\n      (t, index) => index !== i,\n    )\n    this.setState({\n      todos: todosLeft\n    })\n  }\n\n  render() {\n    const {todos} = this.state\n    const allToggled = todos.every(todo => todo.completed)\n    return (\n        <div className='todo-container'>\n          <NewTodo\n            id='new-todo'\n            placeholder='Start a new task?'\n            autoFocus\n            onChange={this.handleInputChange}\n            onKeyDown={this.handleNewTodoKeyDown}\n            value = {this.state.newTodo}\n          />\n          <label\n            htmlFor='new-todo'\n            style={{display: 'none'}}\n          >\n            New Todo\n          </label>\n          {todos.length===0 ? (\n            <Table>\n              <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>\n                      Nothing todo!\n                    </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n            </Table>\n          ) : <Table color='teal' unstackable={true} celled>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell textAlign='center'>\n                  <Checkbox\n                    checked = {allToggled}\n                    onChange={this.handleToggleAll}\n                  />\n                </Table.HeaderCell>\n                <Table.HeaderCell>\n                  Toggle All\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {this.state.todos.map((todo, i) => (\n              <TodoItem\n                key = {i}\n                todo={todo}\n                handleToggle={() => this.handleTodoClick(todo, i)}\n                handleDelete={() => this.handleDelete(i)}\n              />\n              ))}\n            </Table.Body>\n            <Table.Footer>\n              <Table.Row>\n                <Table.HeaderCell colSpan='2'>\n                  <Button\n                    size='small'\n                    onClick={this.handleClearCompleted}\n                  >\n                    Clear completed\n                  </Button>\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        }\n        </div>\n    )\n  }\n}\n\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}