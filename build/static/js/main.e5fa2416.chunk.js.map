{"version":3,"sources":["components/TodoItem.js","components/TodoApp.js","App.js","index.js"],"names":["TodoItem","_ref","todo","handleDelete","handleToggle","react_default","a","createElement","Table","Row","positive","completed","Cell","textAlign","collapsing","Checkbox","checked","onChange","title","Button","color","icon","floated","compact","size","onClick","NewTodo","styled","input","_templateObject","headers","Content-Type","TodoApp","state","todos","newTodo","fetchTodos","fetch","then","data","json","_this","setState","catch","err","console","log","handleToggleAll","allToggled","Promise","all","map","concat","id","method","body","JSON","stringify","handleClearCompleted","completedTodos","filter","handleInputChange","event","value","target","handleNewTodoKeyDown","length","keyCode","preventDefault","trim","this","index","_this2","every","className","placeholder","autoFocus","onKeyDown","htmlFor","style","display","Header","HeaderCell","unstackable","celled","Body","i","components_TodoItem","key","handleTodoClick","Footer","colSpan","Component","AppBody","div","App_templateObject","App","components_TodoApp","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e5fa2416.chunk.js","sourcesContent":["import React from 'react'\nimport {Table, Checkbox, Button} from 'semantic-ui-react'\n\nexport const TodoItem = ({todo, handleDelete, handleToggle}) => {\n  return(\n  <Table.Row positive={todo.completed}>\n    <Table.Cell textAlign={'center'} collapsing={true}>\n      <Checkbox\n        checked={todo.completed}\n        onChange={handleToggle}\n      />\n    </Table.Cell>\n    <Table.Cell>\n      {todo.title}\n      <Button\n        color='red'\n        icon='trash'\n        floated='right'\n        compact size='small'\n        onClick={handleDelete}\n      />\n      <Button\n      color='green'\n      icon = 'edit'\n      floated='right'\n      compact size = 'small'\n      // onClick = {handleEdit}\n      />\n    </Table.Cell>\n  </Table.Row>\n)}\n\nexport default TodoItem\n","import React, {Component} from 'react'\nimport {Table, Checkbox, Button} from 'semantic-ui-react'\nimport TodoItem from './TodoItem'\nimport styled from 'styled-components'\n\nconst NewTodo = styled.input`\n    width: 100%;\n    height: 50px;\n    padding: 15px;\n    border-radius: 10px;\n    border-color: #7fe0fd;\n    font-size: 1.5em;\n`;\n\nconst headers = {\n  'Content-Type': 'application/json'\n}\n\nclass TodoApp extends Component {\n  state = {\n    todos : [  ],\n    newTodo: ''\n  }\n\n  componentDidMount() {\n      this.fetchTodos()\n    }\n\n  fetchTodos = () => {\n    fetch('http://localhost:4500/todos')\n      .then(data => data.json())\n      .then(todos => this.setState({todos}))\n      .catch(err => console.log({err}))\n  }\n\n  handleTodoClick(todo, index) {\n    const {id, completed} = todo\n    fetch(`http://localhost:4500/todos/${id}`,{\n      method: 'PATCH',\n      headers,\n      body: JSON.stringify({completed: !completed})\n    }).then(this.fetchTodos)\n  }\n\n  handleToggleAll = (allToggled) => {\n    const {todos} = this.state\n    Promise.all(todos.map(todo =>\n      fetch(`http://localhost:4500/todos/${todo.id}`, {\n          method: 'PATCH',\n          headers,\n          body: JSON.stringify({completed: !allToggled})\n        })\n      )\n    ).then(this.fetchTodos)\n  }\n\n  handleClearCompleted = () => {\n    const {todos} = this.state\n    const completedTodos = todos.filter(\n      todo => todo.completed\n    )\n\n    Promise.all(completedTodos.map(todo =>\n      fetch(`http://localhost:4500/todos/${todo.id}`, {\n        method: 'DELETE',\n        headers,\n      })\n    )).then(this.fetchTodos)\n  }\n\n  handleInputChange = event => {\n    const value=event.target.value\n    this.setState({newTodo: value})\n  }\n\n  handleNewTodoKeyDown = event => {\n    if (this.state.todos.length >= 10) {\n      return //Only allows for 10 inputs\n    }\n\n    if (event.keyCode!==13) {\n      return //Only add when eneter key is hit\n    }\n\n    event.preventDefault()\n\n    const {newTodo} = this.state\n    var value = newTodo.trim()\n    if (value) {\n      fetch('http://localhost:4500/todos',{\n        method: 'POST',\n        headers,\n        body: JSON.stringify({\n          title: value,\n          completed: false\n          })\n        })\n          .then(this.fetchTodos)\n          .then(() => this.setState({newTodo:' '}))\n      }\n    }\n\n  handleDelete = id =>{\n    fetch(`http://localhost:4500/todos/${id}`, {\n      method: 'DELETE',\n      headers,\n    }).then(this.fetchTodos)\n  }\n\n  render() {\n    const {todos} = this.state\n    const allToggled = todos.every(todo => todo.completed)\n    return (\n        <div className='todo-container'>\n          <NewTodo\n            id='new-todo'\n            placeholder='Start a new task?'\n            autoFocus\n            onChange={this.handleInputChange}\n            onKeyDown={this.handleNewTodoKeyDown}\n            value = {this.state.newTodo}\n          />\n          <label\n            htmlFor='new-todo'\n            style={{display: 'none'}}\n          >\n            New Todo\n          </label>\n          {todos.length===0 ? (\n            <Table color='teal'>\n              <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>\n                      Nothing todo!\n                    </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n            </Table>\n          ) : <Table color='teal' unstackable={true} celled>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell textAlign='center'>\n                  <Checkbox\n                    checked = {allToggled}\n                    onChange={()=>this.handleToggleAll(allToggled)}\n                  />\n                </Table.HeaderCell>\n                <Table.HeaderCell>\n                  Toggle All\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {this.state.todos.map((todo, i) => (\n              <TodoItem\n                key = {i}\n                todo={todo}\n                handleToggle={() => this.handleTodoClick(todo, i)}\n                handleDelete={() => this.handleDelete(todo.id)}\n              />\n              ))}\n            </Table.Body>\n            <Table.Footer>\n              <Table.Row>\n                <Table.HeaderCell colSpan='2'>\n                  <Button\n                    size='small'\n                    onClick={this.handleClearCompleted}\n                  >\n                    Clear completed\n                  </Button>\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        }\n        </div>\n    )\n  }\n}\n\nexport default TodoApp;\n","import React, {Component} from 'react'\nimport styled from 'styled-components'\nimport TodoApp from './components/TodoApp'\nimport './App.css'\n\nconst AppBody = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 400px 1fr;\n  grid-template-rows: 1fr auto 1fr;\n  height: 100vh;\n`;\n\n\nclass App extends Component {\n    render() {\n    return (\n      <AppBody>\n        <TodoApp />\n      </AppBody>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}